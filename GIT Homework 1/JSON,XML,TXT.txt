JSON
 4. Идем на https://github.com/new/ создаем репозиторий c названием JSON  //Создать внешний репозиторий 
 c названием JSON.
 5. git clone https://github.com/insta19801980/JSON.git   //Клонировать репозиторий JSON на локальный 
 компьютер.
 6. переходим в папку JSON, vim new.json       //Внутри локального JSON создать файл “new.json”.
 7. git add new.json                      //Добавить файл под гит.
 8. git commit -m "test JSON"             //Закоммитить файл.
 9. git push                              //Отправить файл на внешний GitHub репозиторий.
 10. vim new.json,  git add new.json , git commit -m "FIO JSON"   //Отредактировать содержание 
 файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, 
 будущая желаемая зарплата). Всё написать в формате JSON.
 11. git push      //Отправить изменения на внешний репозиторий.
 12. vim preferences.json                 //Создать файл preferences.json
 13. vim preferences.json   			  //В файл preferences.json добавить информацию о своих 
 предпочтениях (Любимый фильм, любимый сериал, 
 любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
 14. vim skils.json //Создать файл sklls.json добавить информацию о скиллах которые будут изучены 
 на курсе в формате JSON
 15. 	git add .,	git push		    	// Отправить сразу 2 файла на внешний репозиторий.
 16. Идем на https://github.com/insta19801980/JSON/new/main и создаем bug_report.json //На веб интерфейсе 
 создать файл bug_report.json.
 17. нажимаем кнопку Commit new file	//Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 18. нажимаем редактировать (карандаш), вносим данные, нажимаем кнопку Commit    //На веб интерфейсе 
 модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
 19. нажимаем кнопку Commit      //Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 20. проверяем в git fetch, забираем на локальный компьтер git pull //Синхронизировать внешний 
 и локальный репозиторий JSON
 
XML
 21. Идем на https://github.com/new/ создаем репозиторий c названием XML //Создать внешний репозиторий c 
 названием XML.
 22. git clone https://github.com/insta19801980/XML.git 		//Клонировать репозиторий XML на 
 локальный компьютер.
 23. переходим в папку XML, vim new.xml		//  Внутри локального XML создать файл “new.xml”.
 24. git add new.xml 			//Добавить файл под гит.
 25. git commit -m "test XML"		//Закоммитить файл.
 26. git push 						//Отправить файл на внешний GitHub репозиторий.
 27. vim new.xml					//Отредактировать содержание файла “new.xml” - написать информацию 
 о себе (ФИО, возраст, количество 
 домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
 28. git add new.xml,	git push			//Отправить изменения на внешний репозиторий.
 29. vim preferences.xml	//Создать файл preferences.xml
 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, 
 любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
 31. vim sklls.xml		//Создать файл sklls.xml добавить информацию о скиллах которые будут изучены 
 на курсе в формате XML
 32. git commit -m "preference,skils"			//Сделать коммит в одну строку.
 33. git push			//Отправить сразу 2 файла на внешний репозиторий.
 34. Идем на https://github.com/insta19801980/JSON/new/main и создаем bug_report.xml	\\На веб интерфейсе
 создать файл bug_report.xml.
 35. нажимаем кнопку Commit new file	//Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 36. нажимаем редактировать (карандаш), вносим данные, нажимаем кнопку Commit  	//На веб интерфейсе
 модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
 37. нажимаем кнопку Commit  		//Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 38. проверяем в git fetch, забираем на локальный компьтер git pull	//Синхронизировать внешний и локальный 
 репозиторий XML
 
TXT
 1. Идем на https://github.com/new/ создаем репозиторий c названием TXT	//Создать внешний репозиторий c 
 названием TXT.
 2. git clone https://github.com/insta19801980/TXT.git 		//Клонировать репозиторий TXT на локальный 
 компьютер.
 3. переходим в папку TXT, vim new.txt		//  Внутри локального TXT создать файл “new.txt”.
 4. git add new.txt		             // Добавить файл под гит.
 5. git commit -m "TXT"			     //Закоммитить файл.
 6. git push 						//Отправить файл на внешний GitHub репозиторий.
 7. vim new.txt	//Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, 
 количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.
 8. git push			            //Отправить изменения на внешний репозиторий.
 9. vim preferences.txt			//Создать файл preferences.txt
 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, 
 любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.
 11. vim sklls.txt				//Создать файл sklls.txt добавить информацию о скиллах которые будут изучены 
 на курсе в формате TXT
 12. git commit -m "preference,skils"			//Сделать коммит в одну строку.
 13. git push					//Отправить сразу 2 файла на внешний репозиторий.
 14. Идем на https://github.com/insta19801980/JSON/new/main и создаем bug_report.txt	\\На веб интерфейсе 
 создать файл bug_report.txt.
 15. нажимаем кнопку Commit new file	//Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 16. нажимаем редактировать (карандаш), вносим данные, нажимаем кнопку Commit  	//На веб интерфейсе модифицировать 
 файл bug_report.txt, добавить баг репорт в формате TXT.
 17. нажимаем кнопку Commit  		//Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 18. проверяем в git fetch, забираем на локальный компьтер git pull	//Синхронизировать внешний и локальный 
 репозиторий TXT